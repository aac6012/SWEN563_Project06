#ifndef __PWM_H
#define __PWM_H

/**
 * Header file for controlling servos through PWM
 */

#define PWM_PERIOD 414
#define NUM_POSITIONS 11

#define MIN_DUTY_CYCLE_PERCENT 0.02
#define MAX_DUTY_CYCLE_PERCENT 0.12

/* Lookup table for servo position -> duty cycle value */
static int dutyCycleLookup[11] = {
	PWM_PERIOD * ( (NUM_POSITIONS - 1) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 2) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 3) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 4) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 5) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 6) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 7) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 8) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 9) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 10) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT),
	PWM_PERIOD * ( (NUM_POSITIONS - 11) * ( (MAX_DUTY_CYCLE_PERCENT - MIN_DUTY_CYCLE_PERCENT)/(NUM_POSITIONS-1) ) + MIN_DUTY_CYCLE_PERCENT)
} ;

void PWM_Init(void) ;
void setPosition(int position) ;

#endif
